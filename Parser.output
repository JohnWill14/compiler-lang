Terminals unused in grammar

    NUMBER
    REAL
    IF
    ELSE
    FOR
    WHILE
    LOOP
    IN
    COMPARISON
    LB
    RB
    LOGIC
    '-'
    '+'
    '*'
    '/'
    '^'


Grammar

    0 $accept: program $end

    1 $@1: ε

    2 $@2: ε

    3 program: FUN IDENTIFIER $@1 LP declarations_parameter RP COLON TYPE $@2 LC block RC

    4 declarations_parameter: ε
    5                       | IDENTIFIER COLON TYPE declaration_parameter

    6 declaration_parameter: ε
    7                      | COMMA declarations_parameter

    8 block: ε
    9      | command block

   10 command: PRINT LP TEXT RP FINALIZE
   11        | VAR declaration
   12        | VAL declaration
   13        | attribution

   14 declarations: COMMA declaration
   15             | FINALIZE

   16 declaration: IDENTIFIER COMMA TYPE declarations

   17 attribution: IDENTIFIER ALLOC operation

   18 operation: NUM
   19          | NUM MATH NUM


Terminals, with rules where they appear

    $end (0) 0
    '*' (42)
    '+' (43)
    '-' (45)
    '/' (47)
    '^' (94)
    error (256)
    NUMBER <intval> (258)
    REAL <doubleval> (259)
    IDENTIFIER <id> (260) 3 5 16 17
    IF <lbls> (261)
    ELSE <lbls> (262)
    FOR <lbls> (263)
    WHILE <lbls> (264)
    LOOP <lbls> (265)
    TYPE <id> (266) 3 5 16
    TEXT <id> (267) 10
    FUN (268) 3
    VAR (269) 11
    VAL (270) 12
    IN (271)
    NUM (272) 18 19
    COMPARISON (273)
    ALLOC (274) 17
    LP (275) 3 10
    RP (276) 3 10
    LC (277) 3
    RC (278) 3
    LB (279)
    RB (280)
    MATH (281) 19
    COLON (282) 3 5
    COMMA (283) 7 14 16
    LOGIC (284)
    FINALIZE (285) 10 15
    PRINT (286) 10


Nonterminals, with rules where they appear

    $accept (37)
        on left: 0
    program (38)
        on left: 3
        on right: 0
    $@1 (39)
        on left: 1
        on right: 3
    $@2 (40)
        on left: 2
        on right: 3
    declarations_parameter (41)
        on left: 4 5
        on right: 3 7
    declaration_parameter (42)
        on left: 6 7
        on right: 5
    block (43)
        on left: 8 9
        on right: 3 9
    command (44)
        on left: 10 11 12 13
        on right: 9
    declarations (45)
        on left: 14 15
        on right: 16
    declaration (46)
        on left: 16
        on right: 11 12 14
    attribution (47)
        on left: 17
        on right: 13
    operation (48)
        on left: 18 19
        on right: 17


State 0

    0 $accept: • program $end

    FUN  shift, and go to state 1

    program  go to state 2


State 1

    3 program: FUN • IDENTIFIER $@1 LP declarations_parameter RP COLON TYPE $@2 LC block RC

    IDENTIFIER  shift, and go to state 3


State 2

    0 $accept: program • $end

    $end  shift, and go to state 4


State 3

    3 program: FUN IDENTIFIER • $@1 LP declarations_parameter RP COLON TYPE $@2 LC block RC

    $default  reduce using rule 1 ($@1)

    $@1  go to state 5


State 4

    0 $accept: program $end •

    $default  accept


State 5

    3 program: FUN IDENTIFIER $@1 • LP declarations_parameter RP COLON TYPE $@2 LC block RC

    LP  shift, and go to state 6


State 6

    3 program: FUN IDENTIFIER $@1 LP • declarations_parameter RP COLON TYPE $@2 LC block RC

    IDENTIFIER  shift, and go to state 7

    $default  reduce using rule 4 (declarations_parameter)

    declarations_parameter  go to state 8


State 7

    5 declarations_parameter: IDENTIFIER • COLON TYPE declaration_parameter

    COLON  shift, and go to state 9


State 8

    3 program: FUN IDENTIFIER $@1 LP declarations_parameter • RP COLON TYPE $@2 LC block RC

    RP  shift, and go to state 10


State 9

    5 declarations_parameter: IDENTIFIER COLON • TYPE declaration_parameter

    TYPE  shift, and go to state 11


State 10

    3 program: FUN IDENTIFIER $@1 LP declarations_parameter RP • COLON TYPE $@2 LC block RC

    COLON  shift, and go to state 12


State 11

    5 declarations_parameter: IDENTIFIER COLON TYPE • declaration_parameter

    COMMA  shift, and go to state 13

    $default  reduce using rule 6 (declaration_parameter)

    declaration_parameter  go to state 14


State 12

    3 program: FUN IDENTIFIER $@1 LP declarations_parameter RP COLON • TYPE $@2 LC block RC

    TYPE  shift, and go to state 15


State 13

    7 declaration_parameter: COMMA • declarations_parameter

    IDENTIFIER  shift, and go to state 7

    $default  reduce using rule 4 (declarations_parameter)

    declarations_parameter  go to state 16


State 14

    5 declarations_parameter: IDENTIFIER COLON TYPE declaration_parameter •

    $default  reduce using rule 5 (declarations_parameter)


State 15

    3 program: FUN IDENTIFIER $@1 LP declarations_parameter RP COLON TYPE • $@2 LC block RC

    $default  reduce using rule 2 ($@2)

    $@2  go to state 17


State 16

    7 declaration_parameter: COMMA declarations_parameter •

    $default  reduce using rule 7 (declaration_parameter)


State 17

    3 program: FUN IDENTIFIER $@1 LP declarations_parameter RP COLON TYPE $@2 • LC block RC

    LC  shift, and go to state 18


State 18

    3 program: FUN IDENTIFIER $@1 LP declarations_parameter RP COLON TYPE $@2 LC • block RC

    IDENTIFIER  shift, and go to state 19
    VAR         shift, and go to state 20
    VAL         shift, and go to state 21
    PRINT       shift, and go to state 22

    $default  reduce using rule 8 (block)

    block        go to state 23
    command      go to state 24
    attribution  go to state 25


State 19

   17 attribution: IDENTIFIER • ALLOC operation

    ALLOC  shift, and go to state 26


State 20

   11 command: VAR • declaration

    IDENTIFIER  shift, and go to state 27

    declaration  go to state 28


State 21

   12 command: VAL • declaration

    IDENTIFIER  shift, and go to state 27

    declaration  go to state 29


State 22

   10 command: PRINT • LP TEXT RP FINALIZE

    LP  shift, and go to state 30


State 23

    3 program: FUN IDENTIFIER $@1 LP declarations_parameter RP COLON TYPE $@2 LC block • RC

    RC  shift, and go to state 31


State 24

    9 block: command • block

    IDENTIFIER  shift, and go to state 19
    VAR         shift, and go to state 20
    VAL         shift, and go to state 21
    PRINT       shift, and go to state 22

    $default  reduce using rule 8 (block)

    block        go to state 32
    command      go to state 24
    attribution  go to state 25


State 25

   13 command: attribution •

    $default  reduce using rule 13 (command)


State 26

   17 attribution: IDENTIFIER ALLOC • operation

    NUM  shift, and go to state 33

    operation  go to state 34


State 27

   16 declaration: IDENTIFIER • COMMA TYPE declarations

    COMMA  shift, and go to state 35


State 28

   11 command: VAR declaration •

    $default  reduce using rule 11 (command)


State 29

   12 command: VAL declaration •

    $default  reduce using rule 12 (command)


State 30

   10 command: PRINT LP • TEXT RP FINALIZE

    TEXT  shift, and go to state 36


State 31

    3 program: FUN IDENTIFIER $@1 LP declarations_parameter RP COLON TYPE $@2 LC block RC •

    $default  reduce using rule 3 (program)


State 32

    9 block: command block •

    $default  reduce using rule 9 (block)


State 33

   18 operation: NUM •
   19          | NUM • MATH NUM

    MATH  shift, and go to state 37

    $default  reduce using rule 18 (operation)


State 34

   17 attribution: IDENTIFIER ALLOC operation •

    $default  reduce using rule 17 (attribution)


State 35

   16 declaration: IDENTIFIER COMMA • TYPE declarations

    TYPE  shift, and go to state 38


State 36

   10 command: PRINT LP TEXT • RP FINALIZE

    RP  shift, and go to state 39


State 37

   19 operation: NUM MATH • NUM

    NUM  shift, and go to state 40


State 38

   16 declaration: IDENTIFIER COMMA TYPE • declarations

    COMMA     shift, and go to state 41
    FINALIZE  shift, and go to state 42

    declarations  go to state 43


State 39

   10 command: PRINT LP TEXT RP • FINALIZE

    FINALIZE  shift, and go to state 44


State 40

   19 operation: NUM MATH NUM •

    $default  reduce using rule 19 (operation)


State 41

   14 declarations: COMMA • declaration

    IDENTIFIER  shift, and go to state 27

    declaration  go to state 45


State 42

   15 declarations: FINALIZE •

    $default  reduce using rule 15 (declarations)


State 43

   16 declaration: IDENTIFIER COMMA TYPE declarations •

    $default  reduce using rule 16 (declaration)


State 44

   10 command: PRINT LP TEXT RP FINALIZE •

    $default  reduce using rule 10 (command)


State 45

   14 declarations: COMMA declaration •

    $default  reduce using rule 14 (declarations)
