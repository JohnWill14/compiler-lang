Terminals unused in grammar

    NUMBER
    REAL
    FOR
    LOOP
    IN
    '-'
    '+'
    '*'
    '/'
    '^'


State 83 conflicts: 1 shift/reduce


Grammar

    0 $accept: program $end

    1 program: function code

    2 code: ε
    3     | program

    4 $@1: ε

    5 $@2: ε

    6 function: FUN IDENTIFIER $@1 LP declarations_parameter RP COLON TYPE $@2 LC block RC

    7 declarations_parameter: ε
    8                       | IDENTIFIER COLON TYPE declaration_parameter

    9 declaration_parameter: ε
   10                      | COMMA declarations_parameter

   11 block: ε
   12      | command block

   13 command: PRINT LP TEXT RP FINALIZE
   14        | VAR declaration
   15        | VAL declaration
   16        | attribution
   17        | while
   18        | condition
   19        | breakkk
   20        | return_ss

   21 declarations: COMMA declaration
   22             | FINALIZE

   23 $@3: ε

   24 declaration: IDENTIFIER $@3 COLON TYPE declarations

   25 $@4: ε

   26 declaration: IDENTIFIER $@4 COMMA TYPE LB NUM RB declarations

   27 $@5: ε

   28 attribution: IDENTIFIER ALLOC $@5 novo_valor

   29 novo_valor: operation
   30           | label_abstrato

   31 operation: NUM

   32 $@6: ε

   33 operation: operation MATH $@6 operation

   34 label_abstrato: LC item_array RC FINALIZE
   35               | TEXT
   36               | IDENTIFIER

   37 item_array: novo_valor item_array_final

   38 item_array_final: ε
   39                 | COMMA item_array

   40 $@7: ε

   41 $@8: ε

   42 while: WHILE LP $@7 logik RP $@8 LC block RC

   43 logik: IDENTIFIER COMPARISON IDENTIFIER logic_c

   44 logic_c: ε
   45        | LOGIC logik

   46 $@9: ε

   47 $@10: ε

   48 condition: IF LP $@9 logik RP $@10 LC block RC condition_pod

   49 $@11: ε

   50 $@12: ε

   51 condition_pod: ELSE RP $@11 LC block RC $@12 condition_final
   52              | condition_final

   53 condition_final: ε

   54 breakkk: BREAK_TOKEN FINALIZE

   55 return_ss: RETURN_TOKEN FINALIZE
   56          | RETURN_TOKEN IDENTIFIER FINALIZE
   57          | RETURN_TOKEN TEXT FINALIZE
   58          | RETURN_TOKEN operation FINALIZE


Terminals, with rules where they appear

    $end (0) 0
    '*' (42)
    '+' (43)
    '-' (45)
    '/' (47)
    '^' (94)
    error (256)
    NUMBER <intval> (258)
    REAL <doubleval> (259)
    IDENTIFIER <id> (260) 6 8 24 26 28 36 43 56
    IF <lbls> (261) 48
    ELSE <lbls> (262) 51
    FOR <lbls> (263)
    WHILE <lbls> (264) 42
    LOOP <lbls> (265)
    TYPE <id> (266) 6 8 24 26
    TEXT <id> (267) 13 35 57
    FUN (268) 6
    VAR (269) 14
    VAL (270) 15
    IN (271)
    NUM (272) 26 31
    COMPARISON (273) 43
    ALLOC (274) 28
    LP (275) 6 13 42 48
    RP (276) 6 13 42 48 51
    LC (277) 6 34 42 48 51
    RC (278) 6 34 42 48 51
    LB (279) 26
    RB (280) 26
    MATH (281) 33
    COLON (282) 6 8 24
    COMMA (283) 10 21 26 39
    LOGIC (284) 45
    FINALIZE (285) 13 22 34 54 55 56 57 58
    PRINT (286) 13
    BREAK_TOKEN (287) 54
    RETURN_TOKEN (288) 55 56 57 58


Nonterminals, with rules where they appear

    $accept (39)
        on left: 0
    program (40)
        on left: 1
        on right: 0 3
    code (41)
        on left: 2 3
        on right: 1
    function (42)
        on left: 6
        on right: 1
    $@1 (43)
        on left: 4
        on right: 6
    $@2 (44)
        on left: 5
        on right: 6
    declarations_parameter (45)
        on left: 7 8
        on right: 6 10
    declaration_parameter (46)
        on left: 9 10
        on right: 8
    block (47)
        on left: 11 12
        on right: 6 12 42 48 51
    command (48)
        on left: 13 14 15 16 17 18 19 20
        on right: 12
    declarations (49)
        on left: 21 22
        on right: 24 26
    declaration (50)
        on left: 24 26
        on right: 14 15 21
    $@3 (51)
        on left: 23
        on right: 24
    $@4 (52)
        on left: 25
        on right: 26
    attribution (53)
        on left: 28
        on right: 16
    $@5 (54)
        on left: 27
        on right: 28
    novo_valor (55)
        on left: 29 30
        on right: 28 37
    operation (56)
        on left: 31 33
        on right: 29 33 58
    $@6 (57)
        on left: 32
        on right: 33
    label_abstrato (58)
        on left: 34 35 36
        on right: 30
    item_array (59)
        on left: 37
        on right: 34 39
    item_array_final (60)
        on left: 38 39
        on right: 37
    while (61)
        on left: 42
        on right: 17
    $@7 (62)
        on left: 40
        on right: 42
    $@8 (63)
        on left: 41
        on right: 42
    logik (64)
        on left: 43
        on right: 42 45 48
    logic_c (65)
        on left: 44 45
        on right: 43
    condition (66)
        on left: 48
        on right: 18
    $@9 (67)
        on left: 46
        on right: 48
    $@10 (68)
        on left: 47
        on right: 48
    condition_pod (69)
        on left: 51 52
        on right: 48
    $@11 (70)
        on left: 49
        on right: 51
    $@12 (71)
        on left: 50
        on right: 51
    condition_final (72)
        on left: 53
        on right: 51 52
    breakkk (73)
        on left: 54
        on right: 19
    return_ss (74)
        on left: 55 56 57 58
        on right: 20


State 0

    0 $accept: • program $end

    FUN  shift, and go to state 1

    program   go to state 2
    function  go to state 3


State 1

    6 function: FUN • IDENTIFIER $@1 LP declarations_parameter RP COLON TYPE $@2 LC block RC

    IDENTIFIER  shift, and go to state 4


State 2

    0 $accept: program • $end

    $end  shift, and go to state 5


State 3

    1 program: function • code

    FUN  shift, and go to state 1

    $default  reduce using rule 2 (code)

    program   go to state 6
    code      go to state 7
    function  go to state 3


State 4

    6 function: FUN IDENTIFIER • $@1 LP declarations_parameter RP COLON TYPE $@2 LC block RC

    $default  reduce using rule 4 ($@1)

    $@1  go to state 8


State 5

    0 $accept: program $end •

    $default  accept


State 6

    3 code: program •

    $default  reduce using rule 3 (code)


State 7

    1 program: function code •

    $default  reduce using rule 1 (program)


State 8

    6 function: FUN IDENTIFIER $@1 • LP declarations_parameter RP COLON TYPE $@2 LC block RC

    LP  shift, and go to state 9


State 9

    6 function: FUN IDENTIFIER $@1 LP • declarations_parameter RP COLON TYPE $@2 LC block RC

    IDENTIFIER  shift, and go to state 10

    $default  reduce using rule 7 (declarations_parameter)

    declarations_parameter  go to state 11


State 10

    8 declarations_parameter: IDENTIFIER • COLON TYPE declaration_parameter

    COLON  shift, and go to state 12


State 11

    6 function: FUN IDENTIFIER $@1 LP declarations_parameter • RP COLON TYPE $@2 LC block RC

    RP  shift, and go to state 13


State 12

    8 declarations_parameter: IDENTIFIER COLON • TYPE declaration_parameter

    TYPE  shift, and go to state 14


State 13

    6 function: FUN IDENTIFIER $@1 LP declarations_parameter RP • COLON TYPE $@2 LC block RC

    COLON  shift, and go to state 15


State 14

    8 declarations_parameter: IDENTIFIER COLON TYPE • declaration_parameter

    COMMA  shift, and go to state 16

    $default  reduce using rule 9 (declaration_parameter)

    declaration_parameter  go to state 17


State 15

    6 function: FUN IDENTIFIER $@1 LP declarations_parameter RP COLON • TYPE $@2 LC block RC

    TYPE  shift, and go to state 18


State 16

   10 declaration_parameter: COMMA • declarations_parameter

    IDENTIFIER  shift, and go to state 10

    $default  reduce using rule 7 (declarations_parameter)

    declarations_parameter  go to state 19


State 17

    8 declarations_parameter: IDENTIFIER COLON TYPE declaration_parameter •

    $default  reduce using rule 8 (declarations_parameter)


State 18

    6 function: FUN IDENTIFIER $@1 LP declarations_parameter RP COLON TYPE • $@2 LC block RC

    $default  reduce using rule 5 ($@2)

    $@2  go to state 20


State 19

   10 declaration_parameter: COMMA declarations_parameter •

    $default  reduce using rule 10 (declaration_parameter)


State 20

    6 function: FUN IDENTIFIER $@1 LP declarations_parameter RP COLON TYPE $@2 • LC block RC

    LC  shift, and go to state 21


State 21

    6 function: FUN IDENTIFIER $@1 LP declarations_parameter RP COLON TYPE $@2 LC • block RC

    IDENTIFIER    shift, and go to state 22
    IF            shift, and go to state 23
    WHILE         shift, and go to state 24
    VAR           shift, and go to state 25
    VAL           shift, and go to state 26
    PRINT         shift, and go to state 27
    BREAK_TOKEN   shift, and go to state 28
    RETURN_TOKEN  shift, and go to state 29

    $default  reduce using rule 11 (block)

    block        go to state 30
    command      go to state 31
    attribution  go to state 32
    while        go to state 33
    condition    go to state 34
    breakkk      go to state 35
    return_ss    go to state 36


State 22

   28 attribution: IDENTIFIER • ALLOC $@5 novo_valor

    ALLOC  shift, and go to state 37


State 23

   48 condition: IF • LP $@9 logik RP $@10 LC block RC condition_pod

    LP  shift, and go to state 38


State 24

   42 while: WHILE • LP $@7 logik RP $@8 LC block RC

    LP  shift, and go to state 39


State 25

   14 command: VAR • declaration

    IDENTIFIER  shift, and go to state 40

    declaration  go to state 41


State 26

   15 command: VAL • declaration

    IDENTIFIER  shift, and go to state 40

    declaration  go to state 42


State 27

   13 command: PRINT • LP TEXT RP FINALIZE

    LP  shift, and go to state 43


State 28

   54 breakkk: BREAK_TOKEN • FINALIZE

    FINALIZE  shift, and go to state 44


State 29

   55 return_ss: RETURN_TOKEN • FINALIZE
   56          | RETURN_TOKEN • IDENTIFIER FINALIZE
   57          | RETURN_TOKEN • TEXT FINALIZE
   58          | RETURN_TOKEN • operation FINALIZE

    IDENTIFIER  shift, and go to state 45
    TEXT        shift, and go to state 46
    NUM         shift, and go to state 47
    FINALIZE    shift, and go to state 48

    operation  go to state 49


State 30

    6 function: FUN IDENTIFIER $@1 LP declarations_parameter RP COLON TYPE $@2 LC block • RC

    RC  shift, and go to state 50


State 31

   12 block: command • block

    IDENTIFIER    shift, and go to state 22
    IF            shift, and go to state 23
    WHILE         shift, and go to state 24
    VAR           shift, and go to state 25
    VAL           shift, and go to state 26
    PRINT         shift, and go to state 27
    BREAK_TOKEN   shift, and go to state 28
    RETURN_TOKEN  shift, and go to state 29

    $default  reduce using rule 11 (block)

    block        go to state 51
    command      go to state 31
    attribution  go to state 32
    while        go to state 33
    condition    go to state 34
    breakkk      go to state 35
    return_ss    go to state 36


State 32

   16 command: attribution •

    $default  reduce using rule 16 (command)


State 33

   17 command: while •

    $default  reduce using rule 17 (command)


State 34

   18 command: condition •

    $default  reduce using rule 18 (command)


State 35

   19 command: breakkk •

    $default  reduce using rule 19 (command)


State 36

   20 command: return_ss •

    $default  reduce using rule 20 (command)


State 37

   28 attribution: IDENTIFIER ALLOC • $@5 novo_valor

    $default  reduce using rule 27 ($@5)

    $@5  go to state 52


State 38

   48 condition: IF LP • $@9 logik RP $@10 LC block RC condition_pod

    $default  reduce using rule 46 ($@9)

    $@9  go to state 53


State 39

   42 while: WHILE LP • $@7 logik RP $@8 LC block RC

    $default  reduce using rule 40 ($@7)

    $@7  go to state 54


State 40

   24 declaration: IDENTIFIER • $@3 COLON TYPE declarations
   26            | IDENTIFIER • $@4 COMMA TYPE LB NUM RB declarations

    COMMA     reduce using rule 25 ($@4)
    $default  reduce using rule 23 ($@3)

    $@3  go to state 55
    $@4  go to state 56


State 41

   14 command: VAR declaration •

    $default  reduce using rule 14 (command)


State 42

   15 command: VAL declaration •

    $default  reduce using rule 15 (command)


State 43

   13 command: PRINT LP • TEXT RP FINALIZE

    TEXT  shift, and go to state 57


State 44

   54 breakkk: BREAK_TOKEN FINALIZE •

    $default  reduce using rule 54 (breakkk)


State 45

   56 return_ss: RETURN_TOKEN IDENTIFIER • FINALIZE

    FINALIZE  shift, and go to state 58


State 46

   57 return_ss: RETURN_TOKEN TEXT • FINALIZE

    FINALIZE  shift, and go to state 59


State 47

   31 operation: NUM •

    $default  reduce using rule 31 (operation)


State 48

   55 return_ss: RETURN_TOKEN FINALIZE •

    $default  reduce using rule 55 (return_ss)


State 49

   33 operation: operation • MATH $@6 operation
   58 return_ss: RETURN_TOKEN operation • FINALIZE

    MATH      shift, and go to state 60
    FINALIZE  shift, and go to state 61


State 50

    6 function: FUN IDENTIFIER $@1 LP declarations_parameter RP COLON TYPE $@2 LC block RC •

    $default  reduce using rule 6 (function)


State 51

   12 block: command block •

    $default  reduce using rule 12 (block)


State 52

   28 attribution: IDENTIFIER ALLOC $@5 • novo_valor

    IDENTIFIER  shift, and go to state 62
    TEXT        shift, and go to state 63
    NUM         shift, and go to state 47
    LC          shift, and go to state 64

    novo_valor      go to state 65
    operation       go to state 66
    label_abstrato  go to state 67


State 53

   48 condition: IF LP $@9 • logik RP $@10 LC block RC condition_pod

    IDENTIFIER  shift, and go to state 68

    logik  go to state 69


State 54

   42 while: WHILE LP $@7 • logik RP $@8 LC block RC

    IDENTIFIER  shift, and go to state 68

    logik  go to state 70


State 55

   24 declaration: IDENTIFIER $@3 • COLON TYPE declarations

    COLON  shift, and go to state 71


State 56

   26 declaration: IDENTIFIER $@4 • COMMA TYPE LB NUM RB declarations

    COMMA  shift, and go to state 72


State 57

   13 command: PRINT LP TEXT • RP FINALIZE

    RP  shift, and go to state 73


State 58

   56 return_ss: RETURN_TOKEN IDENTIFIER FINALIZE •

    $default  reduce using rule 56 (return_ss)


State 59

   57 return_ss: RETURN_TOKEN TEXT FINALIZE •

    $default  reduce using rule 57 (return_ss)


State 60

   33 operation: operation MATH • $@6 operation

    $default  reduce using rule 32 ($@6)

    $@6  go to state 74


State 61

   58 return_ss: RETURN_TOKEN operation FINALIZE •

    $default  reduce using rule 58 (return_ss)


State 62

   36 label_abstrato: IDENTIFIER •

    $default  reduce using rule 36 (label_abstrato)


State 63

   35 label_abstrato: TEXT •

    $default  reduce using rule 35 (label_abstrato)


State 64

   34 label_abstrato: LC • item_array RC FINALIZE

    IDENTIFIER  shift, and go to state 62
    TEXT        shift, and go to state 63
    NUM         shift, and go to state 47
    LC          shift, and go to state 64

    novo_valor      go to state 75
    operation       go to state 66
    label_abstrato  go to state 67
    item_array      go to state 76


State 65

   28 attribution: IDENTIFIER ALLOC $@5 novo_valor •

    $default  reduce using rule 28 (attribution)


State 66

   29 novo_valor: operation •
   33 operation: operation • MATH $@6 operation

    MATH  shift, and go to state 60

    $default  reduce using rule 29 (novo_valor)


State 67

   30 novo_valor: label_abstrato •

    $default  reduce using rule 30 (novo_valor)


State 68

   43 logik: IDENTIFIER • COMPARISON IDENTIFIER logic_c

    COMPARISON  shift, and go to state 77


State 69

   48 condition: IF LP $@9 logik • RP $@10 LC block RC condition_pod

    RP  shift, and go to state 78


State 70

   42 while: WHILE LP $@7 logik • RP $@8 LC block RC

    RP  shift, and go to state 79


State 71

   24 declaration: IDENTIFIER $@3 COLON • TYPE declarations

    TYPE  shift, and go to state 80


State 72

   26 declaration: IDENTIFIER $@4 COMMA • TYPE LB NUM RB declarations

    TYPE  shift, and go to state 81


State 73

   13 command: PRINT LP TEXT RP • FINALIZE

    FINALIZE  shift, and go to state 82


State 74

   33 operation: operation MATH $@6 • operation

    NUM  shift, and go to state 47

    operation  go to state 83


State 75

   37 item_array: novo_valor • item_array_final

    COMMA  shift, and go to state 84

    $default  reduce using rule 38 (item_array_final)

    item_array_final  go to state 85


State 76

   34 label_abstrato: LC item_array • RC FINALIZE

    RC  shift, and go to state 86


State 77

   43 logik: IDENTIFIER COMPARISON • IDENTIFIER logic_c

    IDENTIFIER  shift, and go to state 87


State 78

   48 condition: IF LP $@9 logik RP • $@10 LC block RC condition_pod

    $default  reduce using rule 47 ($@10)

    $@10  go to state 88


State 79

   42 while: WHILE LP $@7 logik RP • $@8 LC block RC

    $default  reduce using rule 41 ($@8)

    $@8  go to state 89


State 80

   24 declaration: IDENTIFIER $@3 COLON TYPE • declarations

    COMMA     shift, and go to state 90
    FINALIZE  shift, and go to state 91

    declarations  go to state 92


State 81

   26 declaration: IDENTIFIER $@4 COMMA TYPE • LB NUM RB declarations

    LB  shift, and go to state 93


State 82

   13 command: PRINT LP TEXT RP FINALIZE •

    $default  reduce using rule 13 (command)


State 83

   33 operation: operation • MATH $@6 operation
   33          | operation MATH $@6 operation •

    MATH  shift, and go to state 60

    MATH      [reduce using rule 33 (operation)]
    $default  reduce using rule 33 (operation)


State 84

   39 item_array_final: COMMA • item_array

    IDENTIFIER  shift, and go to state 62
    TEXT        shift, and go to state 63
    NUM         shift, and go to state 47
    LC          shift, and go to state 64

    novo_valor      go to state 75
    operation       go to state 66
    label_abstrato  go to state 67
    item_array      go to state 94


State 85

   37 item_array: novo_valor item_array_final •

    $default  reduce using rule 37 (item_array)


State 86

   34 label_abstrato: LC item_array RC • FINALIZE

    FINALIZE  shift, and go to state 95


State 87

   43 logik: IDENTIFIER COMPARISON IDENTIFIER • logic_c

    LOGIC  shift, and go to state 96

    $default  reduce using rule 44 (logic_c)

    logic_c  go to state 97


State 88

   48 condition: IF LP $@9 logik RP $@10 • LC block RC condition_pod

    LC  shift, and go to state 98


State 89

   42 while: WHILE LP $@7 logik RP $@8 • LC block RC

    LC  shift, and go to state 99


State 90

   21 declarations: COMMA • declaration

    IDENTIFIER  shift, and go to state 40

    declaration  go to state 100


State 91

   22 declarations: FINALIZE •

    $default  reduce using rule 22 (declarations)


State 92

   24 declaration: IDENTIFIER $@3 COLON TYPE declarations •

    $default  reduce using rule 24 (declaration)


State 93

   26 declaration: IDENTIFIER $@4 COMMA TYPE LB • NUM RB declarations

    NUM  shift, and go to state 101


State 94

   39 item_array_final: COMMA item_array •

    $default  reduce using rule 39 (item_array_final)


State 95

   34 label_abstrato: LC item_array RC FINALIZE •

    $default  reduce using rule 34 (label_abstrato)


State 96

   45 logic_c: LOGIC • logik

    IDENTIFIER  shift, and go to state 68

    logik  go to state 102


State 97

   43 logik: IDENTIFIER COMPARISON IDENTIFIER logic_c •

    $default  reduce using rule 43 (logik)


State 98

   48 condition: IF LP $@9 logik RP $@10 LC • block RC condition_pod

    IDENTIFIER    shift, and go to state 22
    IF            shift, and go to state 23
    WHILE         shift, and go to state 24
    VAR           shift, and go to state 25
    VAL           shift, and go to state 26
    PRINT         shift, and go to state 27
    BREAK_TOKEN   shift, and go to state 28
    RETURN_TOKEN  shift, and go to state 29

    $default  reduce using rule 11 (block)

    block        go to state 103
    command      go to state 31
    attribution  go to state 32
    while        go to state 33
    condition    go to state 34
    breakkk      go to state 35
    return_ss    go to state 36


State 99

   42 while: WHILE LP $@7 logik RP $@8 LC • block RC

    IDENTIFIER    shift, and go to state 22
    IF            shift, and go to state 23
    WHILE         shift, and go to state 24
    VAR           shift, and go to state 25
    VAL           shift, and go to state 26
    PRINT         shift, and go to state 27
    BREAK_TOKEN   shift, and go to state 28
    RETURN_TOKEN  shift, and go to state 29

    $default  reduce using rule 11 (block)

    block        go to state 104
    command      go to state 31
    attribution  go to state 32
    while        go to state 33
    condition    go to state 34
    breakkk      go to state 35
    return_ss    go to state 36


State 100

   21 declarations: COMMA declaration •

    $default  reduce using rule 21 (declarations)


State 101

   26 declaration: IDENTIFIER $@4 COMMA TYPE LB NUM • RB declarations

    RB  shift, and go to state 105


State 102

   45 logic_c: LOGIC logik •

    $default  reduce using rule 45 (logic_c)


State 103

   48 condition: IF LP $@9 logik RP $@10 LC block • RC condition_pod

    RC  shift, and go to state 106


State 104

   42 while: WHILE LP $@7 logik RP $@8 LC block • RC

    RC  shift, and go to state 107


State 105

   26 declaration: IDENTIFIER $@4 COMMA TYPE LB NUM RB • declarations

    COMMA     shift, and go to state 90
    FINALIZE  shift, and go to state 91

    declarations  go to state 108


State 106

   48 condition: IF LP $@9 logik RP $@10 LC block RC • condition_pod

    ELSE  shift, and go to state 109

    $default  reduce using rule 53 (condition_final)

    condition_pod    go to state 110
    condition_final  go to state 111


State 107

   42 while: WHILE LP $@7 logik RP $@8 LC block RC •

    $default  reduce using rule 42 (while)


State 108

   26 declaration: IDENTIFIER $@4 COMMA TYPE LB NUM RB declarations •

    $default  reduce using rule 26 (declaration)


State 109

   51 condition_pod: ELSE • RP $@11 LC block RC $@12 condition_final

    RP  shift, and go to state 112


State 110

   48 condition: IF LP $@9 logik RP $@10 LC block RC condition_pod •

    $default  reduce using rule 48 (condition)


State 111

   52 condition_pod: condition_final •

    $default  reduce using rule 52 (condition_pod)


State 112

   51 condition_pod: ELSE RP • $@11 LC block RC $@12 condition_final

    $default  reduce using rule 49 ($@11)

    $@11  go to state 113


State 113

   51 condition_pod: ELSE RP $@11 • LC block RC $@12 condition_final

    LC  shift, and go to state 114


State 114

   51 condition_pod: ELSE RP $@11 LC • block RC $@12 condition_final

    IDENTIFIER    shift, and go to state 22
    IF            shift, and go to state 23
    WHILE         shift, and go to state 24
    VAR           shift, and go to state 25
    VAL           shift, and go to state 26
    PRINT         shift, and go to state 27
    BREAK_TOKEN   shift, and go to state 28
    RETURN_TOKEN  shift, and go to state 29

    $default  reduce using rule 11 (block)

    block        go to state 115
    command      go to state 31
    attribution  go to state 32
    while        go to state 33
    condition    go to state 34
    breakkk      go to state 35
    return_ss    go to state 36


State 115

   51 condition_pod: ELSE RP $@11 LC block • RC $@12 condition_final

    RC  shift, and go to state 116


State 116

   51 condition_pod: ELSE RP $@11 LC block RC • $@12 condition_final

    $default  reduce using rule 50 ($@12)

    $@12  go to state 117


State 117

   51 condition_pod: ELSE RP $@11 LC block RC $@12 • condition_final

    $default  reduce using rule 53 (condition_final)

    condition_final  go to state 118


State 118

   51 condition_pod: ELSE RP $@11 LC block RC $@12 condition_final •

    $default  reduce using rule 51 (condition_pod)
